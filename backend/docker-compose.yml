version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: careerblast-postgres
    environment:
      POSTGRES_DB: careerblast
      POSTGRES_USER: careerblast
      POSTGRES_PASSWORD: careerblast
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - careerblast-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U careerblast -d careerblast"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: careerblast-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - careerblast-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CareerBlast Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: careerblast-api
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: careerblast
      DB_USERNAME: careerblast
      DB_PASSWORD: careerblast
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-for-docker
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - careerblast-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data:

networks:
  careerblast-network:
    driver: bridge
